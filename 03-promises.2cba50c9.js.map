{"mappings":"AAAA,MAAMA,EAAUC,SAASC,cAAc,SAiBvC,SAASC,EAAcC,EAAUC,GAC/B,MAAMC,EAAgBC,KAAKC,SAAW,GAEtB,IAAIC,SAAQ,CAACC,EAASC,KACpCC,YAAW,KACLN,EACFI,EAAQ,qBAAqBN,QAAeC,OAE5CM,EAAO,oBAAoBP,QAAeC,MAAU,GAErDA,EAAM,IAIRQ,MAAKC,IAAUC,QAAQC,IAAIF,EAAM,IACjCG,OAAMC,IAAUH,QAAQC,IAAIE,EAAM,G,CA9BvClB,EAAQmB,iBAAiB,UAEzB,SAAqBC,GACnBA,EAAIC,iBAEJ,IAAIC,EAAaC,OAAOvB,EAAQK,MAAMS,OACtC,MAAMU,EAAYD,OAAOvB,EAAQyB,KAAKX,OAChCY,EAAiBH,OAAOvB,EAAQ2B,OAAOb,OAE7C,IAAK,IAAIc,EAAI,EAAGA,GAAKF,EAAgBE,GAAK,EACxCzB,EAAcyB,EAAGN,GACjBA,GAAcE,C","sources":["src/js/03-promises.js"],"sourcesContent":["const formRef = document.querySelector('.form');\n\nformRef.addEventListener('submit', onBtnCreate);\n\nfunction onBtnCreate(evt) {\n  evt.preventDefault();\n\n  let firstDelay = Number(formRef.delay.value);\n  const delayStep = Number(formRef.step.value);\n  const promisesAmount = Number(formRef.amount.value);\n\n  for (let i = 1; i <= promisesAmount; i += 1) {\n    createPromise(i, firstDelay);\n    firstDelay += delayStep;\n  }\n}\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n\n  const promise = new Promise((resolve, reject) => {\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve(`Fulfilled promise ${position} in ${delay}ms`);\n      } else {\n        reject(`Rejected promise ${position} in ${delay}ms`);\n      }\n    }, delay);\n  });\n\n  promise\n    .then(value => {console.log(value)})\n    .catch(error => {console.log(error)});\n}"],"names":["$47d4ff9957288465$var$formRef","document","querySelector","$47d4ff9957288465$var$createPromise","position","delay","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","then","value","console","log","catch","error","addEventListener","evt","preventDefault","firstDelay","Number","delayStep","step","promisesAmount","amount","i"],"version":3,"file":"03-promises.2cba50c9.js.map"}